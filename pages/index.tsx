import Stopwatch from '@/components/Stopwatch'
import Submit from '@/components/Submit'
import { knex, Run } from '@/config/knex'
import { Knex } from 'knex'
import { Inter } from 'next/font/google'
import Head from 'next/head'
import { useState } from 'react'

const inter = Inter({ subsets: ['latin'] })

function Home({ data }: { data: Run[] }) {
  const [bestRun, setBestRun] = useState<number>(0);

  function handleNewRun(time: number) {
    if (time > bestRun) {
      setBestRun(time);
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="p-6 flex flex-col gap-6">
        <Stopwatch onNewRun={handleNewRun} />

        <Submit bestRun={bestRun} />

        {/* <ul>
          {data.map((entry) => <li key={entry.id}>{Object.entries(entry).toString()}</li>)}
        </ul> */}
        {/* {Object.entries(data).toString()} */}

      </main>
    </>
  )
}

export async function getServerSideProps() {
  // knex.schema.dropTableIfExists('runs')
  if (!await knex.schema.hasTable('runs')) {
    await knex.schema.createTable('runs', (t: Knex.TableBuilder) => {
      t.increments('id').primary();
      t.string('name', 100);
      t.integer('score');
      t.timestamp('submitted_at');
    });
  }

  const data = await knex('runs').select() as Run[];
  // console.log(data);

  return { props: { data } }
}

export default Home